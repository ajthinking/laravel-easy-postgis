CREATE OR REPLACE FUNCTION drop_triggers() RETURNS text AS $$ DECLARE triggNameRecord RECORD; triggTableRecord RECORD; BEGIN FOR triggNameRecord IN select distinct(trigger_name) from information_schema.triggers where trigger_schema = 'public' AND trigger_name LIKE '$NAMING_PREFIX$%' LOOP FOR triggTableRecord IN SELECT distinct(event_object_table) from information_schema.triggers where trigger_name = triggNameRecord.trigger_name LOOP EXECUTE 'DROP TRIGGER ' || triggNameRecord.trigger_name || ' ON ' || triggTableRecord.event_object_table || ';'; END LOOP; END LOOP; RETURN 'done'; END; $$ LANGUAGE plpgsql SECURITY DEFINER;